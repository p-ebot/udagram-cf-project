Parameters:

  EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String

  InstanceType:
      Description: The instance type to use for the bastion host
      Default: t3.small
      Type: String
    
  InstanceAMI:
      Type: String
      Default: ami-06e54d05255faf8f6
      #ubuntu AMI
      Description: AMI of a bastion host instance to use

Resources:
  LoadBSGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Allow http to our load balancer
          VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
          SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
          Tags:
              - Key: name
                Value: !Sub ${EnvironmentName} SecGroup of Load Balancer      

  WebAppSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription:  Allow ssh connections from Bastion HOST
          VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
          SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0 
              
          Tags:
              - Key: name
                Value: !Sub ${EnvironmentName} webServerGroup of EC2 instances
      
  AppLaunchConfig:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        ImageId: !Ref InstanceAMI
        SecurityGroups: 
        - Ref: 'WebAppSG'
        InstanceType: !Ref InstanceType
        BlockDeviceMappings:
            - DeviceName: "/dev/sdk"
              Ebs:
                  VolumeSize: '10'   
                  DeleteOnTermination: true
        UserData:
            Fn::Base64: !Sub |
               #!/bin/bash
                apt-get update -y
                apt-get install apache2 -y
                systemctl start apache2.service
                cd /var/www/html
                echo "It works! Udagram, Udacity!" > index.html
                aws s3 cp s3://udacity-demo-1/udacity.zip .
                unzip -o udacity.zip

  WebAppAutoSGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        VPCZoneIdentifier:
        - Fn::ImportValue: 
            !Sub "${EnvironmentName}-PRIV-NETS"
        LaunchConfigurationName:
          Ref: AppLaunchConfig
        MinSize: '3'
        MaxSize: '5'
        TargetGroupARNs:
        - Ref: WebAppTargetGroup

  WebAppLB:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Subnets:
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
        SecurityGroups:
          - Ref: LoadBSGroup  
  Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
        LoadBalancerArn:
           Ref: WebAppLB
        Port: '80'
        Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1    

  WebAppTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 10
        HealthCheckPath: /
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 8
        HealthyThresholdCount: 2
        Port: 80
        Protocol: HTTP
        UnhealthyThresholdCount: 5
        VpcId: 
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"        
          
              

      
        
          
